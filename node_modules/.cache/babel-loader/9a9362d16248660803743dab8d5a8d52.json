{"ast":null,"code":"var _jsxFileName = \"/Users/dragon/Desktop/Projects/Goaly/client/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport goalReducer from './Reducers/Goal';\nimport { Provider } from 'react-redux';\nimport { createStore, combineReducers, applyMiddleware } from 'redux';\nimport { fetchGoals } from './Actions/Goal';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nconst store = createStore(combineReducers({\n  goals: goalReducer\n}), composeWithDevTools(applyMiddleware(thunk)));\nstore.subscribe(() => {\n  console.log(\"STORE UPDATED\", store.getState());\n});\nconst jsx = React.createElement(Provider, {\n  store: store,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 22\n  },\n  __self: this\n}, React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 23\n  },\n  __self: this\n}));\nstore.dispatch(fetchGoals()).then(() => {\n  ReactDOM.render(jsx, document.getElementById('root'));\n}); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister();","map":{"version":3,"sources":["/Users/dragon/Desktop/Projects/Goaly/client/src/index.js"],"names":["React","ReactDOM","App","serviceWorker","goalReducer","Provider","createStore","combineReducers","applyMiddleware","fetchGoals","composeWithDevTools","thunk","store","goals","subscribe","console","log","getState","jsx","dispatch","then","render","document","getElementById","unregister"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;AACA,OAAOC,WAAP,MAAwB,iBAAxB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,SAASC,UAAT,QAA2B,gBAA3B;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,OAAOC,KAAP,MAAkB,aAAlB;AAEA,MAAMC,KAAK,GAAGN,WAAW,CAACC,eAAe,CAAC;AACxCM,EAAAA,KAAK,EAACT;AADkC,CAAD,CAAhB,EAErBM,mBAAmB,CAACF,eAAe,CAACG,KAAD,CAAhB,CAFE,CAAzB;AAKAC,KAAK,CAACE,SAAN,CAAgB,MAAI;AAClBC,EAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BJ,KAAK,CAACK,QAAN,EAA7B;AACD,CAFD;AAIA,MAAMC,GAAG,GACP,oBAAC,QAAD;AAAU,EAAA,KAAK,EAAEN,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,CADF;AAMAA,KAAK,CAACO,QAAN,CAAeV,UAAU,EAAzB,EAA6BW,IAA7B,CAAkC,MAAM;AACtCnB,EAAAA,QAAQ,CAACoB,MAAT,CAAgBH,GAAhB,EAAqBI,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAArB;AACD,CAFD,E,CAIA;AACA;AACA;;AACApB,aAAa,CAACqB,UAAd","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport goalReducer from './Reducers/Goal';\nimport { Provider } from 'react-redux'\nimport { createStore, combineReducers, applyMiddleware } from 'redux'\nimport { fetchGoals } from './Actions/Goal'\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk'\n\nconst store = createStore(combineReducers({\n  goals:goalReducer\n}), composeWithDevTools(applyMiddleware(thunk)));\n\n\nstore.subscribe(()=>{\n  console.log(\"STORE UPDATED\", store.getState());\n});\n\nconst jsx = (\n  <Provider store={store}>\n    <App />\n  </Provider>\n)\n\nstore.dispatch(fetchGoals()).then(() => {\n  ReactDOM.render(jsx, document.getElementById('root'));\n});\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}